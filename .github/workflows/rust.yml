name: Rust
on: [pull_request, push]
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"
    
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test-stable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --all-targets
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast

  test-integration-stable:
    runs-on: ubuntu-latest
    services:
      chain1:
        image: informaldev/chain_a
        ports:
          - 26656:26656
          - 26657:26657
      chain2:
        image: informaldev/chain_b
        ports:
          - 26556:26656
          - 26557:26657
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Get chain_a details
        run: |
          TRUSTED_HEADER="$(curl -s http://localhost:26657/status)"
          export HASH="$(echo "${TRUSTED_HEADER}" | jq -r .result.sync_info|.latest_block_hash)"
          export HEIGHT="$(echo "${TRUSTED_HEADER}" | jq -r .latest_block_height)"
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin relayer -- -c relayer/relay/tests/config/fixtures/relayer_conf_example.toml light init -x "${HASH}" -h "${HEIGHT}" chain_A
      - name: Get chain_b details
        run: |
          TRUSTED_HEADER="$(curl -s http://localhost:26557/status)"
          export HASH="$(echo "${TRUSTED_HEADER}" | jq -r .result.sync_info|.latest_block_hash)"
          export HEIGHT="$(echo "${TRUSTED_HEADER}" | jq -r .latest_block_height)"
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin relayer -- -c relayer/relay/tests/config/fixtures/relayer_conf_example.toml light init -x "${HASH}" -h "${HEIGHT}" chain_B
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin relayer -- -c relayer/relay/tests/config/fixtures/relayer_conf_example.toml start --reset

  test-nightly-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=unwind -Zpanic_abort_tests"
      - uses: actions-rs/grcov@v0.1
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.coverage.outputs.report }}
          yml: ./codecov.yml
          fail_ci_if_error: true
